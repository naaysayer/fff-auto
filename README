Usage

Script for generate (FFF library)[] files.
Generate .h header file with 'FAKE_FUNCTION_DECLARATION's and FAKE_LIST. and .cc source file fit 'FAKE_FUNCTION_DEFINITION's.

Designed to be used with (AST-parser)[]

Generate from json file with structure:
```json
[
    {
        "function_name": "foo",
        "return_value_type": "int",
        "args": [
            "int",
            "int"
        ]
    },
    ...
]
```

When used -m/--merge new fakes would be placed after token "/* __AUTO_FAKES_MERGE_TOKEN__ */"

Usage:
```
Usage: fffauto.py [-j JSON_FILE]

Options:
  -h, --help            show this help message and exit
  -j "FILE.json", --from-json="FILE.json"
                        Json file to load data from
  -o OUT_DIR, --output-dir=OUT_DIR
                        output path
  -n NAME, --name=NAME  Output file names
  -f, --force           Overwrite existing files
  -m, --merge           Merge with existing files after token /* __AUTO_FAKES_MERGE_TOKEN__ */

```

In my pipeline i used slightly modified version of FFF library,
beacuse i need to use actuall header with functions declarations for types and other stuff. And all this run in CI pipeline like this:
```
./fcals test.c | jq 'map(select(.function_name | test("^mylib")))' | ./fffauto.py -o build
```

That would generate all fakes for function that stars with 'mylib' into build directory, that called from source code in compilatioin db

